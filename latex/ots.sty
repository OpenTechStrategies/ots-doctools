% OTS Latex package
% 
% Copyright 2016 Open Tech Strategies
%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
% 
\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{ots}
  [2016/09/01 v0.01 LaTeX package for consistent OTS docs]

% Just some branding stuff
\newcommand{\otslogoicon}{\raisebox{2em}{\includegraphics[clip,
trim=0cm 11cm 19.3cm 11cm, scale=0.09]{otslogo.pdf}}}
% The renewcommand below, if uncommented, causes itemized lists to
% have little OTS logos for bullet points.  After a while of reading a
% document in that style, Karl found the list items a bit harder to
% find visually than they are with regular bullet points, and had some
% branding concerns about it as well: basically, worried that it might
% strike clients as a little too pushy.  Up for discussion, of course.
% 
% \renewcommand{\labelitemi}{\otslogoicon}
\renewcommand{\footnoterule}{\textcolor{dkgreen}{\rule{\textwidth}{0.9pt}}\vspace*{0.6ex}}

% We generally use \otsurl (which see) instead of \url.  However, we
% make the 'url' package available just in case anyone wants it.
% http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/url/url.pdf
\usepackage{url}

% Needed for \begin{multicols*}.
\usepackage{multicol}

% Use this to explicitly redact text (i.e., classic black bars).
% http://tug.ctan.org/tex-archive/macros/latex/contrib/censor/censor.pdf
\usepackage{censor}

% Use this to shrink the vertical space between lines in a ToC,
% for example because your ToC *almost* fits all on the first
% page and with a little shrinking you can make it work.  E.g.:
%
%   \begin{spacing}{0.1}
%   \tableofcontents
%   \end{spacing}
%
% You can also use this for things like double-spacing a document, etc.
% More information at https://latex.org/forum/viewtopic.php?t=4628 and
% https://ctan.org/pkg/setspace and especially the "Usage:" section of 
% http://tug.ctan.org/tex-archive/macros/latex/contrib/setspace/setspace.sty.
\usepackage{setspace}

% This is so we can do
%
%  \begin{adjustwidth}{LEFT_AMOUNT}{RIGHT_AMOUNT}
%  ...your text here...
%  \end{adjustwidth}
%
% For example, if LEFT_AMOUNT is "0.5in" then it will add 0.5 inches
% to the left-side margin.
%
% An alternative would be to do this in the preamble...
% 
%   \def\changemargin#1#2{\list{}{\rightmargin#2\leftmargin#1}\item[]}
%   \let\endchangemargin=\endlist 
%   
% ...and then in the text:
%   
%   \begin{changemargin}{<arg>}{<arg>} 
%   \end{changemargin} 
%
% See https://tex.stackexchange.com/questions/588/\
% how-can-i-change-the-margins-for-only-part-of-the-text
% for more.
\usepackage{changepage}

% See "An Acronym Environment for LaTeX 2e", by Tobias Oetiker:
% http://ctan.mirrors.hoobly.com/macros/latex/contrib/acronym/acronym.pdf
% 
% Acronyms should be expanded on first use, but not after.
%
% Research note:
% --------------
% 
% In case you're wondering why the "acronym" package versus, say, the
% "acro" package, % which is very similar, it happens that Karl went
% down this research road (because reasons, yak-shaving, etc) and
% his tentative conclusion is that "acronym" is the most popular one,
% and that even the author of "acro" doesn't necessarily think you
% should switch from "acronym" to "acro" unless you really need to.
% Specifically, see this in the source of "acro" (in acro_en.tex):
%
%   > After \wikipedia{} told us what acronyms are and we won't confuse them
%   > with units or other kinds of abbreviations -- why would we need
%   > another package for them?  There are several already:
%   > \pkg{acronym}~\cite{pkg:acronym}, \pkg{acromake}~\cite{pkg:acromake},
%   > \pkg{acroterm}~\cite{pkg:acroterm}, the abbreviations package
%   > \pkg{abbrevs}~\cite{pkg:abbrevs} (the current version 1.4 has a
%   > bug\footnote{see \url{http://tex.stackexchange.com/q/59840/5049}
%   > for solutions.}, though), the nomenclature package
%   > \pkg{nomencl}~\cite{pkg:nomencl}, and of course the mighty
%   > \pkg{glossaries}~\cite{pkg:glossaries}. So there is really no
%   > \emph{need} for a new package.
%   > 
%   > On the other hand \pkg{acronym}, the best of the acronym specific
%   > packages, has one or two shortcomings and sometimes using
%   > \pkg{glossaries} seems a bit of an overkill (or simply inconvenient as
%   > one has to run \code{makeglossaries}, \code{makeindex} or
%   > \code{xindy}, then\footnote{Rumour has it there is going to be a
%   > version that can be used without running an external program}). So
%   > \acro\ stands somewhere in between (but closer to \pkg{acronym}).
%   > 
%   > The main reason for the existance of \acro\ is a question on
%   > \acs{tex.sx}
%   > \footnote{\url{http://tex.stackexchange.com/q/59449/5049}} which
%   > intrigued me and in consequence led to \acro\ and it's option
%   > \option{single}.
%   > 
%   > \acro\ has many similarities with the \pkg{acronym} package.  In fact,
%   > quite some macros have the same name and meaning\footnote{\emph{Not}
%   > in the sense of \cs*{meaning}!}.
%   > 
%   > Please take a minute to think and decide which package will suit your
%   > needs best.  Are you planning to add a glossary to your book?  You
%   > should probably go with \pkg{glossaries}, then.  Are you planning to
%   > add a nomenclature?  You may want to choose \pkg{nomencl} (or again:
%   > \pkg{glossaries}) and so on.  \acro\ does a good job for lists of
%   > abbreviations.

\usepackage[printonlyused,withpage]{acronym}
% One acronym bug you should know about if you're using it: If first
% reference isn't \ac{foo} but instead \acl{foo} or similar, follow it
% up with \label{acro:foo} or else you won't get a page number in the
% acronyms table.

% Text replace command \replace.  JV cargo culted it from
% http://tex.stackexchange.com/questions/213947/how-to-replace-text
\usepackage{xparse}
\ExplSyntaxOn
\NewDocumentCommand{\replace}{mmm}
 {
  \marian_replace:nnn {#1} {#2} {#3}
 }

\tl_new:N \l_marian_input_text_tl

\cs_new_protected:Npn \marian_replace:nnn #1 #2 #3
 {
  \tl_set:Nn \l_marian_input_text_tl { #1 }
  \tl_replace_all:Nnn \l_marian_input_text_tl { #2 } { #3 }
  \tl_use:N \l_marian_input_text_tl
 }
\ExplSyntaxOff
\usepackage{xspace} 

% This allows urls to linebreak in footnotes.  It uses the above replace routine.
\newcommand{\otsurl}[1]{%
  \textit{\href{#1}{\replace{#1}{/}{/\allowbreak }}}\xspace}
% This allows file paths to linebreak on slashes, even in footnotes. It uses the above replace routine.
\newcommand{\filespec}[1]{%
  \textit{\href{}{\replace{#1}{/}{/\allowbreak }}}\xspace}

% Use this to refer to a [sub[sub]]section from elsewhere, 
% assuming you want to include both its number and its name.
\newcommand{\fullref}[1]{%
  \ref{#1}~``\nameref{#1}''}

% Use this for including source references that you don't want to
% include in the output, for example the unique codes used by
% `ots-set-ref' and `ots-find-ref' from ${OTSDIR}/utils/ots.el.
%
% This is just to quickly preserve traceability while writing; later,
% we might convert some of these references to reader-visible form,
% but that would usually also involve first making an appendix
% containing the relevant interview notes (which would therefore need
% to be scrubbed for confidentiality) and having a citation format.
% None of that is handled by this command.  All this command does is
% enable us to keep track of where a piece of information came from,
% with a minimum of interference to the flow of writing process.
%
% (See also the setting of `ots-ref-root' at the bottom of the .ltx
% file under "Local Variables", which makes `ots-find-ref' work here.)
\newcommand{\otsref}[1]{}

% Use one or the other version of this command for citations to other
% documents.  The \otsciteid variant is for citations involving some
% kind of unique identifier (e.g., like for the document inventory in
% ../../clients/hhs/cms/psm/approaches/deliverables/psm-approaches.ltx).
%
% Note: I thought that LaTeX supported command overloading, so that
% one could just distinguish between two versions of \otscite based on
% the number of arguments supplied.  But apparently that doesn't work,
% so the other one is \otsciteid.
\newcommand{\otscite}[1]{\emph{``#1''}}
\newcommand{\otsciteid}[2]{\emph{``#1'' (#2)}}

% Use this for the first mention of a thing.
\newcommand{\otsfirstterm}[1]{\textbf{#1}}

% Use this for foreign (e.g., Latin) phrases.
\newcommand\foreignphrase[1]{\textit{#1}}

% Use this to create a paragraph with wide left and right margins,
% so that it looks prominently offset compared to the paragraphs
% above and below it.
\newcommand{\otsoffsetpara}[1]{%
  % http://texblog.net/latex-archive/uncategorized/changing-margins-paragraph/
  \begingroup
  \leftskip4em
  \rightskip\leftskip
  #1
  \par
  \endgroup
}

% Define a sidebar environment
\usepackage[framemethod=TikZ]{mdframed}
\newcounter{sidebar}
\newmdenv[%
    backgroundcolor=black!2,
    linecolor=black,
    outerlinewidth=1pt,
    roundcorner=2mm,
    skipabove=\baselineskip,
    skipbelow=\baselineskip,
    settings={\global\refstepcounter{sidebar}},
    frametitlefont=\bfseries{},
]{sidebar}

\usepackage{ifxetex,ifluatex}
\ifxetex
  \usepackage{fontspec,xltxtra,xunicode}
  \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
\else
  \ifluatex
    \usepackage{fontspec}
    \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
  \else
    \usepackage[utf8]{inputenc}
  \fi
\fi

\newenvironment{absolutelynopagebreak}
  {\par\nobreak\vfil\penalty0\vfilneg
   \vtop\bgroup}
  {\par\xdef\tpd{\the\prevdepth}\egroup
   \prevdepth=\tpd}

\endinput
%%
%% End of file `ots.sty'.